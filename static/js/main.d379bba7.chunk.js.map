{"version":3,"sources":["TableRow.js","App.js","reportWebVitals.js","index.js"],"names":["TableRow","employee","name","first","last","dob","age","gender","location","state","App","useState","employees","setEmployees","filtered","setFiltered","setState","useEffect","fetch","then","response","json","data","console","log","results","className","onSubmit","event","preventDefault","upDated","filter","toLowerCase","type","value","onChange","target","length","placeholder","onClick","sort","a","b","map","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAceA,EAZE,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,SACf,OACI,+BACM,6BAAKA,EAASC,KAAKC,QACnB,6BAAKF,EAASC,KAAKE,OACnB,6BAAKH,EAASI,IAAIC,MAClB,6BAAKL,EAASM,SACd,6BAAKN,EAASO,SAASC,YC+DtBC,MApEf,WACE,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAyBJ,mBAAS,IAAlC,mBAAOF,EAAP,KAAcO,EAAd,KAqCA,OAnCFC,qBAAU,WACNC,MAAM,gDACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZT,EAAaS,EAAKG,SAClBV,EAAYO,EAAKG,cAEtB,IA4BC,sBAAKC,UAAU,MAAf,UACE,oDACA,uBAAMC,SAdS,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAASlB,EAAUmB,QAAO,SAAA9B,GAAQ,OAAGA,EAASO,SAASC,MAAMuB,gBAAgBvB,EAAMuB,iBACzFjB,EAAYe,IAWV,UACA,uBAAOG,KAAM,OAAOC,MAAOzB,EAAO0B,SAVnB,SAACP,GAClBZ,EAASY,EAAMQ,OAAOF,OACJ,IAAfzB,EAAM4B,QACPtB,EAAYH,IAO8C0B,YAAY,6BACtE,wBAAQL,KAAM,SAAd,uBAEA,wBAAQA,KAAM,SAASM,QAjCV,SAACX,GAChBA,EAAMC,iBACN,IAAMC,EAAQ,YAAKlB,GACnBkB,EAAQU,MAAK,SAACC,EAAEC,GACd,OAAGD,EAAEvC,KAAKE,KAAKsC,EAAExC,KAAKE,MACZ,EAEPqC,EAAEvC,KAAKE,KAAKsC,EAAExC,KAAKE,KACb,EAEF,KAETmB,QAAQC,IAAIM,GACZf,EAAYe,IAoBV,+BACA,kCACE,gCACE,+BACE,4CACA,2CACA,qCACA,wCACA,4CAGJ,gCACGhB,EAAS6B,KAAI,SAAA1C,GAAQ,OACrB,cAAC,EAAD,CAAkCA,SAAUA,GAA7BA,EAAS2C,GAAGV,mBCpDvBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d379bba7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TableRow = ({employee }) => {\r\n    return (\r\n        <tr>\r\n              <td>{employee.name.first}</td>\r\n              <td>{employee.name.last}</td>\r\n              <td>{employee.dob.age}</td>\r\n              <td>{employee.gender}</td>\r\n              <td>{employee.location.state}</td>\r\n            </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport TableRow from './TableRow';\n\nfunction App() {\n  const [employees, setEmployees]= useState([])\n  const [filtered, setFiltered]= useState([])\n  const [state, setState]= useState('')\n\nuseEffect(() => {\n    fetch('https://randomuser.me/api/?results=30&nat=us')\n    .then(response=>response.json())\n    .then(data=>{\n        console.log(data)\n        setEmployees(data.results)\n        setFiltered(data.results)\n    }) \n}, [])\n  const handleSort=(event)=>{\n    event.preventDefault()\n    const upDated= [...employees]\n    upDated.sort((a,b)=>{\n      if(a.name.last<b.name.last){\n        return -1\n      }\n      if(a.name.last>b.name.last){\n        return 1\n      }\n      return 0\n    })\n    console.log(upDated)\n    setFiltered(upDated)\n  }\n  const handleFilter=(event)=>{\n    event.preventDefault()\n    const upDated= employees.filter(employee=> employee.location.state.toLowerCase()===state.toLowerCase())\n    setFiltered(upDated)\n  }\n  const handleChange=(event)=>{\n    setState(event.target.value)\n    if(state.length===0){\n      setFiltered(employees)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <form onSubmit={handleFilter}>\n      <input type= 'text' value={state} onChange={handleChange} placeholder='Search Employee by State'/>\n      <button type= 'submit'>Search</button>\n      </form>\n      <button type= 'button' onClick= {handleSort}>Sort by Last Name</button>\n      <table>\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Age</th>\n            <th>Gender</th>\n            <th>State</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered.map(employee=>(\n           <TableRow key={employee.id.value} employee={employee}/>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}